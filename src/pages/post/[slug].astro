---
import imageUrlBuilder from '@sanity/image-url';
import type { SanityImageSource } from '@sanity/image-url/lib/types/types';
import { getPosts } from '~/sanity/queries';
import { client } from '~/sanity/client';
import { Credits, Heading, PortableText, PostTeaser } from '~/components';
import PageLayout from '~/layouts/PageLayout.astro';

const imageBuilder = imageUrlBuilder(client).format('webp');

// @TODO: Refactor to use `astro-sanity-picture`.
function urlFor(source: SanityImageSource, size: number): string {
  return imageBuilder.image(source).width(size).height(size).url();
}

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((posts) => ({
    params: { slug: posts.slug },
    props: posts,
  }));
}

type Props = any;

const post = Astro.props;

let invocations = 1;

const fadeInAnimation = () => {
  const delay = `${invocations++ * 250}ms`;
  const duration = '750ms';
  const animation = {
    old: {
      name: 'fadeIn',
      delay,
      duration,
      easing: 'linear',
      fillMode: 'forwards',
    },
    new: {
      name: 'fadeIn',
      delay,
      duration,
      easing: 'linear',
      fillMode: 'backwards',
    },
  };
  return {
    forwards: animation,
    backwards: animation,
  };
};
---

<PageLayout
  meta={{
    title: `${post.title} | Manhole Gallery`,
    description: post?.metaDescription,
    image:
      post.mainImage &&
      imageBuilder.image(post.mainImage).width(1600).height(900).url(),
  }}
>
  <article class="grid sm:grid-cols-2 gap-y-8 mb-16 max-w-[125rem] mx-auto">
    <div>
      {
        post?.mainImage && (
          <figure>
            <img
              alt={post.mainImage?.alt || ''}
              title={post.mainImage?.alt}
              class="max-w-full h-auto object-cover bg-gray-100 aspect-square"
              srcset={[
                `${urlFor(post.mainImage, 480)} 480w`,
                `${urlFor(post.mainImage, 768)} 768w`,
                `${urlFor(post.mainImage, 1000)} 1000w`,
              ].join(', ')}
              sizes="(max-width: 639px) 100vw, (max-width: 1999px) 50vw, 62.5rem"
              src={urlFor(post.mainImage, 768)}
              width="1000"
              height="1000"
              transition:name={`post_${post._id}_image`}
            />
          </figure>
        )
      }
    </div>

    <div class="space-y-4 px-4 sm:px-8 md:px-12 lg:px-16">
      <Heading
        as="h1"
        transition:animate={fadeInAnimation()}
        transition:name={`post_${post._id}_title`}
      >
        {post.title}
      </Heading>

      {
        post?.locations && (
          <p
            class="flex gap-3 flex-wrap text-lg"
            transition:animate={fadeInAnimation()}
            transition:name={`post_${post._id}_locations`}
          >
            <span class="sr-only">Locations:</span>
            {post.locations.map((location) => (
              <span>{location.name}</span>
            ))}
          </p>
        )
      }

      {
        (post?.body || post?.summary) && (
          <div
            class="max-w-[40ch] lg:py-4"
            transition:animate={fadeInAnimation()}
            transition:name={`post_${post._id}_description`}
          >
            <PortableText value={post.body || post.summary} components={{}} />
          </div>
        )
      }

      {
        post?.credits && post.credits.length > 0 && (
          <Credits
            credits={post.credits}
            transition:animate={fadeInAnimation()}
            transition:name={`post_${post._id}_credits`}
          />
        )
      }
    </div>
  </article>

  <section class="container">
    <div class="mb-8 lg:mb-12 md:text-center">
      <Heading as="h2">More Posts</Heading>
    </div>
    <div
      class="grid xs:grid-cols-2 lg:grid-cols-3 align-top justify-start gap-4"
    >
      {
        post.morePosts.map((post) => (
          <PostTeaser
            imageSizes="(max-width: 474px) 100vw, (max-width: 1023px) 50vw, 20.625rem"
            lazy
            post={post}
          />
        ))
      }
    </div>
  </section>
</PageLayout>
