---
import imageUrlBuilder from '@sanity/image-url';
import type { SanityImageSource } from '@sanity/image-url/lib/types/types';
import { client } from '~/sanity/client';

const imageBuilder = imageUrlBuilder(client).format('webp');

export type Props = {
  imageSizes: string;
  lazy?: boolean;
  post: PostTeaser;
};

const { imageSizes, lazy = false, post } = Astro.props;

const sizes = [256, 360, 440, 529, 625, 729, 841, 961, 1024];

// @TODO: Refactor to use `astro-sanity-picture`.
function urlFor(source: SanityImageSource, size: number): string {
  return imageBuilder.image(source).width(size).height(size).url();
}
---

<article class="relative group">
  {
    post?.mainImage && (
      <figure>
        <img
          alt={post.mainImage?.alt || ''}
          title={post.mainImage?.alt}
          class="absolute inset-0 max-w-full h-auto object-cover bg-gray-100 aspect-square"
          srcset={sizes
            .map((size) => `${urlFor(post.mainImage, size)} ${size}w`)
            .join(', ')}
          sizes={imageSizes}
          width="1000"
          height="1000"
          loading={lazy ? 'lazy' : 'eager'}
          transition:name={`post_${post._id}_image`}
        />
      </figure>
    )
  }
  <div class="flex items-end relative aspect-square z-10 p-4 lg:p-8">
    <a
      class="block before:absolute before:inset-0 before:bg-primary/50 before:z-[-1] opacity-0 hover:opacity-100 transition-all duration-500 text-white text-2xl md:text-3xl lg:text-5xl font-bold leading-none"
      href={`/post/${post.slug}`}
    >
      {post.title}
    </a>
  </div>
</article>
