---
import { cva, cx, type VariantProps } from 'class-variance-authority';
import getCountryShape, { type countryIDs } from '~/lib/countries';

const countryShapeVariants = cva(
  ['block', 'w-auto', 'pointer-events-none', 'transition-colors'],
  {
    variants: {
      size: {
        xs: ['h-8', 'md:h-10', 'lg:h-16'],
        sm: ['h-16', 'md:h-24', 'lg:h-32'],
        base: ['h-32', 'md:h-48', 'lg:h-64'],
        lg: ['h-64', 'md:h-72', 'lg:h-96'],
      },
    },
    defaultVariants: {
      size: 'base',
    },
  },
);

export type Props = VariantProps<typeof countryShapeVariants> &
  astroHTML.JSX.SVGAttributes & {
    countryCode: countryIDs | unknown | undefined;
  };

const { countryCode, size = 'base', ...props } = Astro.props;
const countryShape = countryCode
  ? getCountryShape(countryCode as countryIDs)
  : null;
---

{
  countryShape && (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox={countryShape.viewBox}
      class:list={cx(countryShapeVariants({ size: size }), props?.class)}
      aria-hidden="true"
      role="presentation"
      {...props}
    >
      <path d={countryShape.shape} fill="currentColor" />
    </svg>
  )
}
